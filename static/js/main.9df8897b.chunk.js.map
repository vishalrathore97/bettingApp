{"version":3,"sources":["components/pagination.jsx","components/playing9.jsx","components/searchBox.jsx","components/players.jsx","utils/paginate.js","components/start.jsx","App.js","reportWebVitals.js","index.js"],"names":["Pagination","props","pageSize","itemsCount","onPageChange","currentPage","pageCount","Math","ceil","pages","_","range","className","map","page","style","cursor","onClick","Playing9","selectedPlayers","Fragment","p","index","src","alt","Name","aria-hidden","wins","Bet","Price","SearchBox","state","this","value","onChange","type","name","placeholder","Component","Players","search","handlePageChange","setState","handleStart","length","toast","info","history","push","handleSearch","currentTarget","players","filter","selected","allPlayers","regex","RegExp","test","currentPagePlayers","items","startIndex","slice","take","paginate","disabled","player","checked","onPlayerSelect","htmlFor","lost","Start","num","updateAll","newNum","random","console","log","parseInt","onBetChange","setBadge","bet","setBadgeClass","badgeClass","playing9","Redirect","to","App","handleBetChange","handleSelectedPlayer","indexOf","axios","get","data","d","Switch","Route","path","render","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.9df8897b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = (props) => {\r\n  const { pageSize, itemsCount, onPageChange, currentPage } = props;\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n  if (pageCount === 1) {\r\n    return null;\r\n  }\r\n  const pages = _.range(1, pageCount + 1);\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => {\r\n          return (\r\n            <li\r\n              key={page}\r\n              className={\r\n                currentPage === page ? \"page-item active\" : \"page-item \"\r\n              }\r\n            >\r\n              <button\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => onPageChange(page)}\r\n                className=\"page-link\"\r\n              >\r\n                {page}\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  pageSize: PropTypes.number.isRequired,\r\n  itemsCount: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst Playing9 = ({ selectedPlayers }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {selectedPlayers.map((p, index) => (\r\n        <div key={index} className=\"card\">\r\n          <div className=\"row g-0\">\r\n            <div className=\"col-3\">\r\n              <img className=\"img-resize\" src={p[\"Profile Image\"]} alt=\"...\" />\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <h5 className=\"card-title\">{p.Name}</h5>\r\n              <span className=\"mr-3\">\r\n                <i className=\"fa fa-trophy\" aria-hidden=\"true\" /> {p.wins}\r\n              </span>\r\n              <span>\r\n                <i className=\"fa fa-plus-circle\" aria-hidden=\"true\" /> {p.Bet}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <i className=\"fa fa-inr\" aria-hidden=\"true\" /> {p.Price}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Playing9;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SearchBox extends Component {\r\n  state = {};\r\n  render() {\r\n    const { value, onChange } = this.props;\r\n    return (\r\n      <input\r\n        className=\"form-control mb-4\"\r\n        value={value}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        name=\"search\"\r\n        placeholder=\"Search...\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport Pagination from \"./pagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport Playing9 from \"./playing9\";\r\nimport { toast } from \"react-toastify\";\r\nimport SearchBox from \"./searchBox\";\r\n\r\nclass Players extends Component {\r\n  state = {\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    search: \"\",\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({\r\n      currentPage: page,\r\n    });\r\n  };\r\n\r\n  handleStart = (selectedPlayers) => {\r\n    if (selectedPlayers.length !== 9) {\r\n      toast.info(\"Select 9 players.\");\r\n    } else {\r\n      this.props.history.push(\"/start\");\r\n    }\r\n  };\r\n\r\n  handleSearch = ({ currentTarget }) => {\r\n    this.setState({\r\n      search: currentTarget.value,\r\n      currentPage: 1,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { pageSize, currentPage, search } = this.state;\r\n    const { players } = this.props;\r\n    const selectedPlayers = players.filter((p) => p.selected) || [];\r\n\r\n    let allPlayers = players.map((p) => p);\r\n    if (search) {\r\n      let regex = new RegExp(\"^\" + search, \"i\");\r\n      allPlayers = players.filter((p) => regex.test(p.Name));\r\n    }\r\n    let currentPagePlayers = paginate(allPlayers, pageSize, currentPage);\r\n    return (\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-3 ml-2 \">\r\n          <img src=\"/logo2.png\" alt=\"\" />\r\n          <h5 className=\"mb-4\">Playing 9</h5>\r\n          <Playing9 selectedPlayers={selectedPlayers} />\r\n          <button\r\n            onClick={() => this.handleStart(selectedPlayers)}\r\n            className=\"btn btn-primary mt-4\"\r\n            disabled={selectedPlayers.length > 0 ? false : true}\r\n          >\r\n            START\r\n          </button>\r\n        </div>\r\n        <div className=\"col\">\r\n          <h4 className=\"mb-3\">Select Playing 9</h4>\r\n          <SearchBox value={search} onChange={this.handleSearch} />\r\n          <table className=\"table \">\r\n            <thead>\r\n              <tr>\r\n                <th>SELECT</th>\r\n                <th>PLAYER NAME</th>\r\n                <th>AVATAR</th>\r\n                <th>\r\n                  <i className=\"fa fa-plus-circle\" aria-hidden=\"true\" /> BET\r\n                </th>\r\n                <th>\r\n                  <i className=\"fa fa-trophy\" aria-hidden=\"true\" /> WINS\r\n                </th>\r\n                <th>LOST</th>\r\n                <th>\r\n                  <i className=\"fa fa-inr\" aria-hidden=\"true\" /> PRICE\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentPagePlayers.map((player, index) => (\r\n                <tr key={index}>\r\n                  <td>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={player.selected}\r\n                      onChange={() => this.props.onPlayerSelect(player)}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <label htmlFor={index}>{player.Name}</label>\r\n                  </td>\r\n                  <td>\r\n                    <img src={player[\"Profile Image\"]} alt=\"\" />\r\n                  </td>\r\n                  <td>{player.Bet}</td>\r\n                  <td>{player.wins}</td>\r\n                  <td>{player.lost}</td>\r\n                  <td>{player.Price}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <Pagination\r\n            pageSize={pageSize}\r\n            itemsCount={players.length}\r\n            onPageChange={this.handlePageChange}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Players;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageSize, currentPage) {\r\n  const startIndex = (currentPage - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Start extends Component {\r\n  state = {\r\n    num: 0,\r\n  };\r\n  updateAll = () => {\r\n    let newNum = _.random(1, 9);\r\n\r\n    const players = this.props.players.map((p) => {\r\n      if (p.selected) {\r\n        \r\n        console.log(p.Name + \" \" + p.Price);\r\n        if (newNum === parseInt(p.Bet)) {\r\n          p.wins += 1;\r\n          p.Price *= 2;\r\n        } else {\r\n          p.lost += 1;\r\n        }\r\n      }\r\n      return p;\r\n    });\r\n    this.props.onBetChange(players);\r\n    this.setState({ num: newNum });\r\n  };\r\n  setBadge = (num, bet) => {\r\n    let betNo = parseInt(bet);\r\n    return num === betNo ? \"WINNER\" : \"LOSE\";\r\n  };\r\n  setBadgeClass = (num, bet) => {\r\n    let betNo = parseInt(bet);\r\n    let badgeClass = \"card-footer \";\r\n    badgeClass += num === betNo ? \"bg-success\" : \"bg-danger\";\r\n    return badgeClass;\r\n  };\r\n  componentDidMount() {\r\n    let newNum = _.random(1, 9);\r\n    const players = this.props.players.map((p) => {\r\n      if (p.selected) {\r\n        console.log(p.Name + \" \" + p.Price);\r\n        if (newNum === parseInt(p.Bet)) {\r\n          p.wins += 1;\r\n          p.Price *= 2;\r\n        } else {\r\n          p.lost += 1;\r\n        }\r\n      }\r\n      return p;\r\n    });\r\n    this.props.onBetChange(players);\r\n    this.setState({ num: newNum });\r\n  }\r\n\r\n  render() {\r\n    const { playing9 } = this.props;\r\n    const { num } = this.state;\r\n    if (playing9.length !== 9) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <button onClick={this.updateAll} className=\"btn-primary btn-fixed-2\">\r\n          TRY AGAIN\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.history.push(\"/\")}\r\n          className=\"btn-primary btn-fixed\"\r\n        >\r\n          BACK\r\n        </button>\r\n        <div className=\"container mt-3\">\r\n          <h1 className=\"text-center mb-3\">\r\n            <span className=\"badge rounded-pill bg-secondary\">{num}</span>\r\n          </h1>\r\n          <div className=\"row justify-content-md-center text-center\">\r\n            {playing9.map((p, index) => (\r\n              <div key={index} className=\"col-sm-auto mb-4 ml-2 mr-2\">\r\n                <div className=\"card h-100\">\r\n                  <img\r\n                    src={p[\"Profile Image\"]}\r\n                    className=\"card-img-top \"\r\n                    alt=\"...\"\r\n                  />\r\n                  <div>\r\n                    <h5>{p.Name}</h5>\r\n                    <span className=\"mr-3\">\r\n                      <i className=\"fa fa-trophy\" /> {p.wins}\r\n                    </span>\r\n                    <span>\r\n                      <i className=\"fa fa-plus-circle\" /> {p.Bet}\r\n                    </span>\r\n                    <p>\r\n                      <i className=\"fa fa-inr\" /> {p.Price}\r\n                    </p>\r\n                  </div>\r\n                  <div className={this.setBadgeClass(num, p.Bet)}>\r\n                    <span>{this.setBadge(num, p.Bet)}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Start;\r\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport axios from \"axios\";\nimport Players from \"./components/players\";\nimport Start from \"./components/start\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst apiEndpoint =\n  \"https://s3-ap-southeast-1.amazonaws.com/he-public-data/bets7747a43.json\";\n\nclass App extends Component {\n  state = {\n    players: [],\n  };\n  async componentDidMount() {\n    const { data } = await axios.get(apiEndpoint);\n    const players = data.map((d) => {\n      return { selected: false, wins: 0, lost: 0, ...d };\n    });\n    this.setState({ players });\n  }\n  handleBetChange = (players) => {\n    this.setState({ players });\n  };\n  handleSelectedPlayer = (player) => {\n    const players = [...this.state.players];\n    const index = players.indexOf(player);\n    players[index] = { ...player };\n    players[index].selected = !players[index].selected;\n    this.setState({ players });\n  };\n  render() {\n    const playing9 = this.state.players.filter((p) => p.selected);\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <Switch>\n          <Route\n            path=\"/start\"\n            render={(props) => (\n              <Start\n                playing9={playing9}\n                players={this.state.players}\n                onBetChange={this.handleBetChange}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path=\"/\"\n            exact\n            render={(props) => (\n              <Players\n                players={this.state.players}\n                onPlayerSelect={this.handleSelectedPlayer}\n                {...props}\n              />\n            )}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}